"use strict";var t=function(t){return t&&t.__esModule?t["default"]:t},e=function(){function t(t,e){for(var i in e){var n=e[i];n.configurable=!0,n.value&&(n.writable=!0)}Object.defineProperties(t,e)}return function(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),e}}(),i=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},n=t(require("fs")),r=t(require("./atom-view-react-bridge")),a=function(){function t(e,n,r){i(this,t),this.shouldScroll=n,this.tabTitle=r,this.uri=e}return e(t,{dispose:{value:function(){}},getTitle:{value:function(){return this.tabTitle}},getReactClass:{value:function(){throw new Error("Override ReactEditor.getReactClass()")}},serialize:{value:function(){return{filePath:this.uri,tabTitle:this.tabTitle,deserializer:this.constructor.name}}},getURI:{value:function(){return this.uri}},getPath:{value:function(){return this.uri}},saveUiState:{value:function(t){atom.config.set("jibo-atom."+this.constructor.name,JSON.stringify(t))}},getUiState:{value:function(){var t=atom.config.get("jibo-atom."+this.constructor.name);return t?JSON.parse(t):void 0}},onPaneActivated:{value:function(){}},onPaneDeactivated:{value:function(){}},getViewClass:{value:function(){return r(this.getReactClass(),this.constructor.name)}}},{deserialize:{value:function(t){return 0===t.filePath.search("atom:/")||n.existsSync(t.filePath)?new this(t.filePath):void console.warn("Could not deserialize "+this.constructor.name+" for path '"+t.filePath+"' because that file no longer exists")}}}),t}();module.exports=a;