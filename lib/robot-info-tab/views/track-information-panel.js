"use strict";var e=function(e){return e&&e.__esModule?e["default"]:e},t=e(require("react"));module.exports=t.createClass({displayName:"track-information-panel",getInitialState:function(){return{}},render:function(){var e=[],a=0;for(var n in this.props.data){e.push(t.createElement("h2",{key:a,ref:n+"heading"},"Track ",n,": ",this.props.data[n].classification));for(var i in this.props.infoToDisplay){var s=this.props.infoToDisplay[i];e.push(t.createElement("div",null,s)),a++,e.push(t.createElement("input",{key:a,type:"string",ref:n+s,dataItem:n,attr:s,value:this.props.data[n][s]}))}a++}return this.items=e,t.createElement("atom-panel",{className:"top native-key-bindings"},t.createElement("div",{className:"padded native-key-bindings"},t.createElement("div",{className:"inset-panel native-key-bindings"},t.createElement("button",{className:"btn",onClick:this.props.toggleTarget},"Toggle Target Labels"),t.createElement("div",{className:"panel-heading native-key-bindings"},"Track Information"),t.createElement("div",{className:"panel-body padded native-key-bindings"},e))))},componentDidMount:function(){setInterval(this.update,this.props.intervalLength)},update:function(){var e=this;this.props.parent.paused||this.items.forEach(function(t){"input"==t.type&&t.attr in e.props.infoToDisplay})},componentWillUnmount:function(){clearInterval(this.interval)}});